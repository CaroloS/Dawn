{"version":3,"sources":["../src/calendar.ts"],"names":[],"mappings":"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","file":"calendar.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, Inject, LOCALE_ID } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CalendarService } from './calendar.service';\n\nexport interface IEvent {\n    allDay: boolean;\n    endTime: Date;\n    startTime: Date;\n    title: string;\n}\n\nexport interface IRange {\n    startTime: Date;\n    endTime: Date;\n}\n\nexport interface IView {\n}\n\nexport interface IDayView extends IView {\n    allDayEvents: IDisplayAllDayEvent[];\n    rows: IDayViewRow[];\n}\n\nexport interface IDayViewRow {\n    events: IDisplayEvent[];\n    time: Date;\n}\n\nexport interface IMonthView extends IView {\n    dates: IMonthViewRow[];\n    dayHeaders: string[];\n}\n\nexport interface IMonthViewRow {\n    current?: boolean;\n    date: Date;\n    events: IEvent[];\n    hasEvent?: boolean;\n    label: string;\n    secondary: boolean;\n    selected?: boolean;\n    disabled: boolean;\n}\n\nexport interface IWeekView extends IView {\n    dates: IWeekViewDateRow[];\n    rows: IWeekViewRow[][];\n    dayHeaders: string[];\n}\n\nexport interface IWeekViewDateRow {\n    date: Date;\n    events: IDisplayEvent[];\n}\n\nexport interface IWeekViewRow {\n    events: IDisplayEvent[];\n    time: Date;\n}\n\nexport interface IDisplayEvent {\n    endIndex: number;\n    endOffset?: number;\n    event: IEvent;\n    startIndex: number;\n    startOffset?: number;\n    overlapNumber?: number;\n    position?: number;\n}\n\nexport interface IDisplayAllDayEvent {\n    event: IEvent;\n}\n\nexport interface ICalendarComponent {\n    currentViewIndex: number;\n    direction: number;\n    eventSource: IEvent[];\n    getRange: { (date:Date): IRange; };\n    getViewData: { (date:Date): IView };\n    mode: CalendarMode;\n    range: IRange;\n    views: IView[];\n    onDataLoaded: { (): void };\n    onRangeChanged: EventEmitter<IRange>;\n}\n\nexport interface ITimeSelected {\n    events: IEvent[];\n    selectedTime: Date;\n    disabled: boolean;\n}\n\nexport interface IMonthViewDisplayEventTemplateContext {\n    view: IView,\n    row: number,\n    col: number\n}\n\nexport interface IMonthViewEventDetailTemplateContext {\n    selectedDate: ITimeSelected,\n    noEventsLabel: string\n}\n\nexport interface IDateFormatter {\n    formatMonthViewDay?: { (date:Date): string; };\n    formatMonthViewDayHeader?: { (date:Date): string; };\n    formatMonthViewTitle?: { (date:Date): string; };\n    formatWeekViewDayHeader?: { (date:Date): string; };\n    formatWeekViewTitle?: { (date:Date): string; };\n    formatWeekViewHourColumn?: { (date:Date): string; };\n    formatDayViewTitle?: { (date:Date): string; };\n    formatDayViewHourColumn?: { (date:Date): string; };\n}\n\nexport type CalendarMode = 'day' | 'month' | 'week';\n\nexport type QueryMode = 'local' | 'remote';\n\nexport enum Step {\n    QuarterHour = 15,\n    HalfHour = 30,\n    Hour = 60\n}\n\n\nexport class CalendarComponent implements OnInit {\n    \n    get currentDate():Date {\n        return this._currentDate;\n    }\n\n    set currentDate(val:Date) {\n        if (!val) {\n            val = new Date();\n        }\n\n        this._currentDate = val;\n        this.calendarService.setCurrentDate(val, true);\n        this.onCurrentDateChanged.emit(this._currentDate);\n    }\n\n     eventSource:IEvent[] = [];\n     calendarMode:CalendarMode = 'month';\n     formatDay:string = 'd';\n     formatDayHeader:string = 'EEE';\n     formatDayTitle:string = 'MMMM dd, yyyy';\n     formatWeekTitle:string = 'MMMM yyyy, Week $n';\n     formatMonthTitle:string = 'MMMM yyyy';\n     formatWeekViewDayHeader:string = 'EEE d';\n     formatHourColumn:string = 'j';\n     showEventDetail:boolean = true;\n     startingDayMonth:number = 0;\n     startingDayWeek:number = 0;\n     allDayLabel:string = 'all day';\n     noEventsLabel:string = 'No Events';\n     queryMode:QueryMode = 'local';\n     step:Step = Step.Hour;\n     autoSelect:boolean = true;\n     markDisabled:(date:Date) => boolean;\n     monthviewDisplayEventTemplate:TemplateRef<IMonthViewDisplayEventTemplateContext>;\n     monthviewInactiveDisplayEventTemplate:TemplateRef<IMonthViewDisplayEventTemplateContext>;\n     monthviewEventDetailTemplate:TemplateRef<IMonthViewEventDetailTemplateContext>;\n     weekviewAllDayEventTemplate:TemplateRef<IDisplayAllDayEvent>;\n     weekviewNormalEventTemplate:TemplateRef<IDisplayEvent>;\n     dayviewAllDayEventTemplate:TemplateRef<IDisplayAllDayEvent>;\n     dayviewNormalEventTemplate:TemplateRef<IDisplayEvent>;\n     dateFormatter:IDateFormatter;\n     dir:string = \"\";\n     scrollToHour:number = 0;\n     preserveScrollPosition:boolean = false;\n     lockSwipeToPrev:boolean = false;\n     lockSwipes:boolean = false;\n     locale:string = \"\";\n     startHour:number = 0;\n     endHour:number = 24;\n\n     onCurrentDateChanged = new EventEmitter<Date>();\n     onRangeChanged = new EventEmitter<IRange>();\n     onEventSelected = new EventEmitter<IEvent>();\n     onTimeSelected = new EventEmitter<ITimeSelected>();\n     onTitleChanged = new EventEmitter<string>();\n\n    private _currentDate:Date;\n    private hourParts = 1;\n    private currentDateChangedFromChildrenSubscription:Subscription;\n\n    constructor(private calendarService:CalendarService,  private appLocale:string) {\n        this.locale = appLocale;\n    }\n\n    ngOnInit() {\n        if (this.autoSelect) {\n            if (this.autoSelect.toString() === 'false') {\n                this.autoSelect = false;\n            } else {\n                this.autoSelect = true;\n            }\n        }\n        this.hourParts = 60 / this.step;\n        this.startHour = parseInt(this.startHour.toString());\n        this.endHour = parseInt(this.endHour.toString());\n        this.calendarService.queryMode = this.queryMode;\n\n        this.currentDateChangedFromChildrenSubscription = this.calendarService.currentDateChangedFromChildren$.subscribe(currentDate => {\n            this._currentDate = currentDate;\n            this.onCurrentDateChanged.emit(currentDate);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.currentDateChangedFromChildrenSubscription) {\n            this.currentDateChangedFromChildrenSubscription.unsubscribe();\n            this.currentDateChangedFromChildrenSubscription = null;\n        }\n    }\n\n    rangeChanged(range:IRange) {\n        this.onRangeChanged.emit(range);\n    }\n\n    eventSelected(event:IEvent) {\n        this.onEventSelected.emit(event);\n    }\n\n    timeSelected(timeSelected:ITimeSelected) {\n        this.onTimeSelected.emit(timeSelected);\n    }\n\n    titleChanged(title:string) {\n        this.onTitleChanged.emit(title);\n    }\n\n    loadEvents() {\n        this.calendarService.loadEvents();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'calendar',\n    template: `\n        <ng-template #monthviewDefaultDisplayEventTemplate let-view=\"view\" let-row=\"row\" let-col=\"col\">\n            {{view.dates[row*7+col].label}}\n        </ng-template>\n        <ng-template #monthviewDefaultEventDetailTemplate let-showEventDetail=\"showEventDetail\" let-selectedDate=\"selectedDate\" let-noEventsLabel=\"noEventsLabel\">\n            <ion-list class=\"event-detail-container\" has-bouncing=\"false\" *ngIf=\"showEventDetail\" overflow-scroll=\"false\">\n                <ion-item *ngFor=\"let event of selectedDate?.events\" (click)=\"eventSelected(event)\">\n                        <span *ngIf=\"!event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{event.startTime|date: 'HH:mm'}}\n                            -\n                            {{event.endTime|date: 'HH:mm'}}\n                        </span>\n                    <span *ngIf=\"event.allDay\" class=\"monthview-eventdetail-timecolumn\">{{allDayLabel}}</span>\n                    <span class=\"event-detail\">  |  {{event.title}}</span>\n                </ion-item>\n                <ion-item *ngIf=\"selectedDate?.events.length==0\">\n                    <div class=\"no-events-label\">{{noEventsLabel}}</div>\n                </ion-item>\n            </ion-list>\n        </ng-template>\n        <ng-template #defaultAllDayEventTemplate let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </ng-template>\n        <ng-template #defaultNormalEventTemplate let-displayEvent=\"displayEvent\">\n            <div class=\"calendar-event-inner\">{{displayEvent.event.title}}</div>\n        </ng-template>\n\n        <div [ngSwitch]=\"calendarMode\" class=\"{{calendarMode}}view-container\">\n            <monthview *ngSwitchCase=\"'month'\"\n                [formatDay]=\"formatDay\"\n                [formatDayHeader]=\"formatDayHeader\"\n                [formatMonthTitle]=\"formatMonthTitle\"\n                [startingDayMonth]=\"startingDayMonth\"\n                [showEventDetail]=\"showEventDetail\"\n                [noEventsLabel]=\"noEventsLabel\"\n                [autoSelect]=\"autoSelect\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [monthviewDisplayEventTemplate]=\"monthviewDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\n                [monthviewInactiveDisplayEventTemplate]=\"monthviewInactiveDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\"\n                [monthviewEventDetailTemplate]=\"monthviewEventDetailTemplate||monthviewDefaultEventDetailTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </monthview>\n            <weekview *ngSwitchCase=\"'week'\"\n                [formatWeekTitle]=\"formatWeekTitle\"\n                [formatWeekViewDayHeader]=\"formatWeekViewDayHeader\"\n                [formatHourColumn]=\"formatHourColumn\"\n                [startingDayWeek]=\"startingDayWeek\"\n                [allDayLabel]=\"allDayLabel\"\n                [hourParts]=\"hourParts\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [weekviewAllDayEventTemplate]=\"weekviewAllDayEventTemplate||defaultAllDayEventTemplate\"\n                [weekviewNormalEventTemplate]=\"weekviewNormalEventTemplate||defaultNormalEventTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [scrollToHour]=\"scrollToHour\"\n                [preserveScrollPosition]=\"preserveScrollPosition\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [startHour]=\"startHour\"\n                [endHour]=\"endHour\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </weekview>\n            <dayview *ngSwitchCase=\"'day'\"\n                [formatDayTitle]=\"formatDayTitle\"\n                [formatHourColumn]=\"formatHourColumn\"\n                [allDayLabel]=\"allDayLabel\"\n                [hourParts]=\"hourParts\"\n                [eventSource]=\"eventSource\"\n                [markDisabled]=\"markDisabled\"\n                [dayviewAllDayEventTemplate]=\"dayviewAllDayEventTemplate||defaultAllDayEventTemplate\"\n                [dayviewNormalEventTemplate]=\"dayviewNormalEventTemplate||defaultNormalEventTemplate\"\n                [locale]=\"locale\"\n                [dateFormatter]=\"dateFormatter\"\n                [dir]=\"dir\"\n                [scrollToHour]=\"scrollToHour\"\n                [preserveScrollPosition]=\"preserveScrollPosition\"\n                [lockSwipeToPrev]=\"lockSwipeToPrev\"\n                [lockSwipes]=\"lockSwipes\"\n                [startHour]=\"startHour\"\n                [endHour]=\"endHour\"\n                (onRangeChanged)=\"rangeChanged($event)\"\n                (onEventSelected)=\"eventSelected($event)\"\n                (onTimeSelected)=\"timeSelected($event)\"\n                (onTitleChanged)=\"titleChanged($event)\">\n            </dayview>\n        </div>\n    `,\n    styles: [`\n        :host > div { height: 100%; }\n\n        .event-detail-container {\n          border-top: 2px darkgrey solid;\n        }\n\n        .no-events-label {\n          font-weight: bold;\n          color: darkgrey;\n          text-align: center;\n        }\n\n        .event-detail {\n          cursor: pointer;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n        }\n\n        .monthview-eventdetail-timecolumn {\n          width: 110px;\n          overflow: hidden;\n        }\n\n        .calendar-event-inner {\n          overflow: hidden;\n          background-color: #3a87ad;\n          color: white;\n          height: 100%;\n          width: 100%;\n          padding: 2px;\n          line-height: 15px;\n        }\n\n        @media (max-width: 750px) {\n          .calendar-event-inner {\n            font-size: 12px;\n          }\n        }\n    `],\n    providers: [CalendarService]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CalendarService, },\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'currentDate': [{ type: Input },],\n'eventSource': [{ type: Input },],\n'calendarMode': [{ type: Input },],\n'formatDay': [{ type: Input },],\n'formatDayHeader': [{ type: Input },],\n'formatDayTitle': [{ type: Input },],\n'formatWeekTitle': [{ type: Input },],\n'formatMonthTitle': [{ type: Input },],\n'formatWeekViewDayHeader': [{ type: Input },],\n'formatHourColumn': [{ type: Input },],\n'showEventDetail': [{ type: Input },],\n'startingDayMonth': [{ type: Input },],\n'startingDayWeek': [{ type: Input },],\n'allDayLabel': [{ type: Input },],\n'noEventsLabel': [{ type: Input },],\n'queryMode': [{ type: Input },],\n'step': [{ type: Input },],\n'autoSelect': [{ type: Input },],\n'markDisabled': [{ type: Input },],\n'monthviewDisplayEventTemplate': [{ type: Input },],\n'monthviewInactiveDisplayEventTemplate': [{ type: Input },],\n'monthviewEventDetailTemplate': [{ type: Input },],\n'weekviewAllDayEventTemplate': [{ type: Input },],\n'weekviewNormalEventTemplate': [{ type: Input },],\n'dayviewAllDayEventTemplate': [{ type: Input },],\n'dayviewNormalEventTemplate': [{ type: Input },],\n'dateFormatter': [{ type: Input },],\n'dir': [{ type: Input },],\n'scrollToHour': [{ type: Input },],\n'preserveScrollPosition': [{ type: Input },],\n'lockSwipeToPrev': [{ type: Input },],\n'lockSwipes': [{ type: Input },],\n'locale': [{ type: Input },],\n'startHour': [{ type: Input },],\n'endHour': [{ type: Input },],\n'onCurrentDateChanged': [{ type: Output },],\n'onRangeChanged': [{ type: Output },],\n'onEventSelected': [{ type: Output },],\n'onTimeSelected': [{ type: Output },],\n'onTitleChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}